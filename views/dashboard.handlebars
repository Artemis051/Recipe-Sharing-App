<h1>Dashboard:</h1>
<style>
   
     
</style>

<div class="dashboard-container">
    <div class="recipe-form-container">
        <form method="post" action="recipes">
            <div>
                Title:<br />
                <input type="text" name="title" id="title" />
            </div>
            <div>
                Ingredients:<br />
                <input type="text" name="ingredients" id="ingredients" />
            </div>
            <div>
                Instructions:<br />
                <input type="text" name="instructions" id="instructions" />
            </div>
            <div>
                <input type="button" onClick="sendRecipe()" id="sendRecipeButton" value="Add" />
                <input type="button" onClick="deleteRecipe(0)" id="deleteButton" value="Delete" />
                <input type="button" onClick="clearForm()" id="clearButton" value="Clear" />
            </div>
        </form>
    </div>

    <div class="recent-recipes-container">
        <h2>Your Recipes</h2>
        <div id="recipeList">
            <ul class="people_list">
                {{#each recipes}}
                <li><a href='javascript:deleteRecipe({{id}})'>[X]</a> - <a href='javascript:getRecipe({{id}})'>{{title}}</a></li>
                {{/each}}
            </ul>
        </div>
    </div>
</div>
<script>
    let recipeId = 0;
    const title = document.getElementById("title");
    const ingredients = document.getElementById("ingredients");
    const instructions = document.getElementById("instructions");
    const recipeList = document.getElementById("recipeList");
    const buttonDelete = document.getElementById("deleteButton");
    const sendRecipeButton= document.getElementById("sendRecipeButton");
    buttonDelete.disabled=true;
    let recipes;
    const sendRecipe = async () => {
        const data = {
            title: title.value,
            ingredients: ingredients.value,
            instructions: instructions.value
        }

        const method = recipeId === 0 ? "POST" : "PUT";
        const url = "/api/recipes" + (recipeId === 0 ? "" : "/" + recipeId);
        console.log(url);

        const resp = await fetch(url, {
            method: method,
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(data)
        })
        const json = await resp.json();
        alert(json.message);
        if (json.status === 1) {
            recipes = json.recipes;
            renderRecipeList();
        }
        console.log("sendRecipe:", json);
    }
    const deleteRecipe = async (id) => {
        console.log("deleteRecipe:", id);
        if(id!==0)
        {
            recipeId=id;
        }
        if(recipeId===0)
        {
            return;
        }
        const resp = await fetch("/api/recipes/" + recipeId, { method: "DELETE",
            headers: {
                "Content-Type": "application/json",
            }
         });
        const data = await resp.json();
        recipes=data.recipes;

        console.log("Delete Recipe Response:", data);
        renderRecipeList();
        clearForm();
    }
    const getRecipe = async (id) => {
        const resp = await fetch("/api/recipes/" + id);
        const data = await resp.json();
        console.log("DATA:", data);
        recipeId = data.id;
        title.value = data.title;
        ingredients.value = data.ingredients;
        instructions.value = data.instructions;
        buttonDelete.disabled=false;
        sendRecipeButton.value="Save";
    }
    const renderRecipeList = () => {
        let list = '<ul class="people_list">';

        for (let r of recipes) {
            console.log(r);
            const li = `<li><a href='javascript:deleteRecipe(${r.id})'>[X]</a> - <a href='javascript:getRecipe(${r.id})'>${r.title}</a></li>`;
            list += li;
        }
        console.log(list)
        recipeList.innerHTML = list + "</ul>";
    }
    const clearForm = ()=>{
        sendRecipeButton.value="Add";
        buttonDelete.disabled=true;
        recipeId =0;
        title.value = "";
        ingredients.value = "";
        instructions.value ="";
    }
</script>

<!-- Recipe Search Form -->
<div class="container">
    <h1>Recipe Search</h1>
    <form action="/search" method="POST">
        <input type="text" name="query" placeholder="Search for a recipe ..." />
        <button type="submit">Search</button>
    </form>
</div>
<!-- Search Results/List of Recipes -->
<div class="container">
    <h1>Search Results</h1>
    <ul class="recipe-list">
      {{#each recipes}}
        <li>
          <a href="/recipe/{{this.id}}">
            <div class="recipe-card">
              <img class="recipe-image" src="{{this.image}}" alt="{{this.title}}">
              <h2 class="recipe-title">{{this.title}}</h2>
            </div>
          </a>
        </li>
      {{/each}}
    </ul>
    <a href="/">Back to home</a>
</div>

<script>
    //JavaScript for the front end goes here

const express = require('express');
const axios = require('axios');
const app = express();
const api_key = 'My_API_Key';
// Middleware to parse request body
app.use(express.json());
app.use(express.urlencoded({ extended: true }));
// Route for search/fetch
app.post('/search', async (req, res) => {
    const { query } = req.body;
    const response = await axios.get(`https://api.spoonacular.com/recipes/complexSearch?query=${query}&apiKey=${MY_API_Key}`);
    const recipes = response.data.results;
    res.render('results', { recipes });
});
// Start the server
const port = 3001;
app.listen(port, () => {
    console.log(`Server running on http://localhost:${port}`);
});









</script>